---
- name: Get the regular Ansible user's username
  ansible.builtin.set_fact:
    remote_user: "{{ ansible_user_id }}"

- name: Check the Command Line Tools package metadata
  ansible.builtin.command:
    cmd: pkgutil --pkg-info=com.apple.pkg.CLTools_Executables
  register: clt_pkg_info
  check_mode: false
  ignore_errors: true
  changed_when: false

- name: "Download command line tools dmg"
  ansible.builtin.get_url:
    url: https://artifactory.ccdc.cam.ac.uk/artifactory/ccdc-3rdparty-macos-xcode-installers/Command_Line_Tools_for_Xcode_12.4.dmg
    dest: "/Users/{{ remote_user }}/Downloads/Command_Line_Tools_for_Xcode_12.4.dmg"
    mode: 0755
    url_username: "{{ ansible_deployment_artifactory_user }}"
    headers:
      X-JFrog-Art-Api: "{{ ansible_deployment_artifactory_key }}"
  when: clt_pkg_info.rc != 0

- name: Create temporary download directory for command line tools
  ansible.builtin.file:
    path: "/Users/{{ remote_user }}/Downloads/clt"
    state: directory
    mode: '0755'
  when: clt_pkg_info.rc != 0

- name: "Mount command line tools dmg"  # noqa: no-changed-when
  ansible.builtin.command:
    cmd: >
      hdiutil attach
      "/Users/{{ remote_user }}/Downloads/Command_Line_Tools_for_Xcode_12.4.dmg"
      -nobrowse
      -mountpoint "/Users/{{ remote_user }}/Downloads/clt"
  when: clt_pkg_info.rc != 0

- name: Install command line tools package  # noqa: no-changed-when
  ansible.builtin.command:
    cmd: installer -pkg "/Users/{{ remote_user }}/Downloads/clt/Command Line Tools.pkg" -target /
  when: clt_pkg_info.rc != 0
  become: true

- name: Check the Command Line Tools package metadata (after install)  # noqa: no-changed-when
  ansible.builtin.command:
    cmd: pkgutil --pkg-info=com.apple.pkg.CLTools_Executables
  when: clt_pkg_info.rc != 0

- name: "Unmount command line tools dmg"  # noqa: no-changed-when
  ansible.builtin.command:
    cmd: "hdiutil detach /Users/{{ remote_user }}/Downloads/clt"
  when: clt_pkg_info.rc != 0

- name: "Remove command line tools dmg mountpoint"
  ansible.builtin.file:
    path: /Users/{{ remote_user }}/Downloads/clt
    state: absent

- name: Install homebrew
  ansible.builtin.include_role:
    name: geerlingguy.mac.homebrew

- name: Ensure extra paths required for `brew link` exist and are writable by {{ ansible_user }}
  become: true
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
    owner: "{{ remote_user }}"
    mode: 0755
  loop:
    # Used by kcpassword, xcodes and p7zip
    - /usr/local/var/homebrew/linked
    # used by jfrog-cli
    - /usr/local/share/fish/vendor_completions.d
  loop_control:
    loop_var: directory
